{"ast":null,"code":"import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { s3TransferHandler } from '../runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { buildStorageServiceError, map } from '../utils/deserializeHelpers.mjs';\nimport { serializeObjectConfigsToHeaders, assignStringVariables, validateS3RequiredParameter, serializePathnameObjectKey } from '../utils/serializeHelpers.mjs';\nimport { validateObjectUrl } from '../../validateObjectUrl.mjs';\nimport { defaultConfig, parseXmlError } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst putObjectSerializer = async (input, endpoint) => {\n  const headers = {\n    ...(await serializeObjectConfigsToHeaders({\n      ...input,\n      ContentType: input.ContentType ?? 'application/octet-stream'\n    })),\n    ...assignStringVariables({\n      'content-md5': input.ContentMD5,\n      'x-amz-checksum-crc32': input.ChecksumCRC32,\n      'x-amz-expected-bucket-owner': input.ExpectedBucketOwner,\n      'If-None-Match': input.IfNoneMatch\n    })\n  };\n  const url = new AmplifyUrl(endpoint.url.toString());\n  validateS3RequiredParameter(!!input.Key, 'Key');\n  url.pathname = serializePathnameObjectKey(url, input.Key);\n  validateObjectUrl({\n    bucketName: input.Bucket,\n    key: input.Key,\n    objectURL: url\n  });\n  return {\n    method: 'PUT',\n    headers,\n    url,\n    body: input.Body\n  };\n};\nconst putObjectDeserializer = async response => {\n  if (response.statusCode >= 300) {\n    const error = await parseXmlError(response);\n    throw buildStorageServiceError(error, response.statusCode);\n  } else {\n    return {\n      ...map(response.headers, {\n        ETag: 'etag',\n        VersionId: 'x-amz-version-id'\n      }),\n      $metadata: parseMetadata(response)\n    };\n  }\n};\nconst putObject = composeServiceApi(s3TransferHandler, putObjectSerializer, putObjectDeserializer, {\n  ...defaultConfig,\n  responseType: 'text'\n});\nexport { putObject };","map":{"version":3,"names":["putObjectSerializer","input","endpoint","headers","serializeObjectConfigsToHeaders","ContentType","assignStringVariables","ContentMD5","ChecksumCRC32","ExpectedBucketOwner","IfNoneMatch","url","AmplifyUrl","toString","validateS3RequiredParameter","Key","pathname","serializePathnameObjectKey","validateObjectUrl","bucketName","Bucket","key","objectURL","method","body","Body","putObjectDeserializer","response","statusCode","error","parseXmlError","buildStorageServiceError","map","ETag","VersionId","$metadata","parseMetadata","putObject","composeServiceApi","s3TransferHandler","defaultConfig","responseType"],"sources":["C:\\Users\\lvsct\\Desktop\\bitcoin-prediction\\node_modules\\@aws-amplify\\storage\\src\\providers\\s3\\utils\\client\\s3data\\putObject.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseMetadata, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { assignStringVariables, buildStorageServiceError, map, s3TransferHandler, serializeObjectConfigsToHeaders, serializePathnameObjectKey, validateS3RequiredParameter, } from '../utils';\nimport { validateObjectUrl } from '../../validateObjectUrl';\nimport { defaultConfig, parseXmlError } from './base';\nconst putObjectSerializer = async (input, endpoint) => {\n    const headers = {\n        ...(await serializeObjectConfigsToHeaders({\n            ...input,\n            ContentType: input.ContentType ?? 'application/octet-stream',\n        })),\n        ...assignStringVariables({\n            'content-md5': input.ContentMD5,\n            'x-amz-checksum-crc32': input.ChecksumCRC32,\n            'x-amz-expected-bucket-owner': input.ExpectedBucketOwner,\n            'If-None-Match': input.IfNoneMatch,\n        }),\n    };\n    const url = new AmplifyUrl(endpoint.url.toString());\n    validateS3RequiredParameter(!!input.Key, 'Key');\n    url.pathname = serializePathnameObjectKey(url, input.Key);\n    validateObjectUrl({\n        bucketName: input.Bucket,\n        key: input.Key,\n        objectURL: url,\n    });\n    return {\n        method: 'PUT',\n        headers,\n        url,\n        body: input.Body,\n    };\n};\nconst putObjectDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = (await parseXmlError(response));\n        throw buildStorageServiceError(error, response.statusCode);\n    }\n    else {\n        return {\n            ...map(response.headers, {\n                ETag: 'etag',\n                VersionId: 'x-amz-version-id',\n            }),\n            $metadata: parseMetadata(response),\n        };\n    }\n};\nexport const putObject = composeServiceApi(s3TransferHandler, putObjectSerializer, putObjectDeserializer, { ...defaultConfig, responseType: 'text' });\n"],"mappings":";;;;;;;;;;;;AAAA;AACA;AAOA,MAAMA,mBAAmB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EACnD,MAAMC,OAAO,GAAG;IACZ,IAAI,MAAMC,+BAA+B,CAAC;MACtC,GAAGH,KAAK;MACRI,WAAW,EAAEJ,KAAK,CAACI,WAAW,IAAI;IAC9C,CAAS,CAAC,CAAC;IACH,GAAGC,qBAAqB,CAAC;MACrB,aAAa,EAAEL,KAAK,CAACM,UAAU;MAC/B,sBAAsB,EAAEN,KAAK,CAACO,aAAa;MAC3C,6BAA6B,EAAEP,KAAK,CAACQ,mBAAmB;MACxD,eAAe,EAAER,KAAK,CAACS;IACnC,CAAS;EACT,CAAK;EACD,MAAMC,GAAG,GAAG,IAAIC,UAAU,CAACV,QAAQ,CAACS,GAAG,CAACE,QAAQ,EAAE,CAAC;EACnDC,2BAA2B,CAAC,CAAC,CAACb,KAAK,CAACc,GAAG,EAAE,KAAK,CAAC;EAC/CJ,GAAG,CAACK,QAAQ,GAAGC,0BAA0B,CAACN,GAAG,EAAEV,KAAK,CAACc,GAAG,CAAC;EACzDG,iBAAiB,CAAC;IACdC,UAAU,EAAElB,KAAK,CAACmB,MAAM;IACxBC,GAAG,EAAEpB,KAAK,CAACc,GAAG;IACdO,SAAS,EAAEX;EACnB,CAAK,CAAC;EACF,OAAO;IACHY,MAAM,EAAE,KAAK;IACbpB,OAAO;IACPQ,GAAG;IACHa,IAAI,EAAEvB,KAAK,CAACwB;EACpB,CAAK;AACL,CAAC;AACD,MAAMC,qBAAqB,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAIA,QAAQ,CAACC,UAAU,IAAI,GAAG,EAAE;IAC5B,MAAMC,KAAK,GAAI,MAAMC,aAAa,CAACH,QAAQ,CAAE;IAC7C,MAAMI,wBAAwB,CAACF,KAAK,EAAEF,QAAQ,CAACC,UAAU,CAAC;EAClE,CAAK,MACI;IACD,OAAO;MACH,GAAGI,GAAG,CAACL,QAAQ,CAACxB,OAAO,EAAE;QACrB8B,IAAI,EAAE,MAAM;QACZC,SAAS,EAAE;MAC3B,CAAa,CAAC;MACFC,SAAS,EAAEC,aAAa,CAACT,QAAQ;IAC7C,CAAS;EACT;AACA,CAAC;AACW,MAACU,SAAS,GAAGC,iBAAiB,CAACC,iBAAiB,EAAEvC,mBAAmB,EAAE0B,qBAAqB,EAAE;EAAE,GAAGc,aAAa;EAAEC,YAAY,EAAE;AAAM,CAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}