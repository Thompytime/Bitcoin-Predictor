{"ast":null,"code":"import React__default from 'react';\nimport { isFunction } from '@aws-amplify/ui';\nimport { useStableId } from '../../primitives/utils/useStableId.mjs';\n\n// `FileSelect` input `type` must always be set to `file`\nconst INPUT_TYPE = 'file';\nconst TEST_ID = 'amplify-file-select';\nconst DEFAULT_PROPS = {\n  style: {\n    display: 'none'\n  },\n  type: 'file',\n  'data-testid': TEST_ID\n};\n/**\n * @internal @unstable\n */\nconst FileSelect = React__default.forwardRef(function FileSelect(_ref, ref) {\n  let {\n    multiple = true,\n    type = 'FILE',\n    testId = 'amplify-file-select',\n    ...props\n  } = _ref;\n  return React__default.createElement(\"input\", {\n    ...DEFAULT_PROPS,\n    ...props,\n    ...(type === 'FOLDER' ? {\n      webkitdirectory: ''\n    } : undefined),\n    \"data-testid\": testId,\n    multiple: multiple,\n    ref: ref,\n    type: INPUT_TYPE\n  });\n});\n/**\n * @internal @unstable\n *\n * @usage\n * ```tsx\n *  function MyUploadButton() {\n *    const [files, setFiles] = React.useState<File[]>([]);\n *    const [fileSelect, handleFileSelect] = useFileSelect(setFiles);\n *    return (\n *      <>\n *        {fileSelect}\n *        <Button\n *          onClick={() => {\n *            handleFileSelect('file');\n *          }}\n *        />\n *      </>\n *    );\n *  }\n * ```\n */\nconst useFileSelect = onSelect => {\n  const [inputProps, setInputProps] = React__default.useState(undefined);\n  const id = useStableId();\n  const ref = React__default.useRef(null);\n  React__default.useEffect(() => {\n    if (inputProps) {\n      ref.current?.click();\n    }\n  }, [id, inputProps]);\n  const handleFileSelect = React__default.useCallback((type, options) => {\n    if (id !== ref.current?.id) return;\n    setInputProps({\n      type,\n      ...options\n    });\n  }, [id]);\n  const fileSelect = React__default.createElement(FileSelect, {\n    ...inputProps,\n    id: id,\n    onChange: event => {\n      if (isFunction(inputProps?.onChange)) inputProps?.onChange(event);\n      if (isFunction(onSelect) && !!event.target.files?.length) {\n        onSelect?.([...event.target.files]);\n      }\n      // Reset the input value to allow re-selecting the same file\n      if (ref.current) {\n        ref.current.value = '';\n      }\n      // clean up\n      setInputProps(undefined);\n    },\n    ref: ref\n  });\n  return [fileSelect, handleFileSelect];\n};\nexport { DEFAULT_PROPS, FileSelect, useFileSelect };","map":{"version":3,"names":["React__default","isFunction","useStableId","INPUT_TYPE","TEST_ID","DEFAULT_PROPS","style","display","type","FileSelect","forwardRef","_ref","ref","multiple","testId","props","createElement","webkitdirectory","undefined","useFileSelect","onSelect","inputProps","setInputProps","useState","id","useRef","useEffect","current","click","handleFileSelect","useCallback","options","fileSelect","onChange","event","target","files","length","value"],"sources":["C:/Users/lvsct/Desktop/bitcoin-prediction/node_modules/@aws-amplify/ui-react/dist/esm/components/FileSelect/FileSelect.mjs"],"sourcesContent":["import React__default from 'react';\nimport { isFunction } from '@aws-amplify/ui';\nimport { useStableId } from '../../primitives/utils/useStableId.mjs';\n\n// `FileSelect` input `type` must always be set to `file`\nconst INPUT_TYPE = 'file';\nconst TEST_ID = 'amplify-file-select';\nconst DEFAULT_PROPS = {\n    style: { display: 'none' },\n    type: 'file',\n    'data-testid': TEST_ID,\n};\n/**\n * @internal @unstable\n */\nconst FileSelect = React__default.forwardRef(function FileSelect({ multiple = true, type = 'FILE', testId = 'amplify-file-select', ...props }, ref) {\n    return (React__default.createElement(\"input\", { ...DEFAULT_PROPS, ...props, ...(type === 'FOLDER' ? { webkitdirectory: '' } : undefined), \"data-testid\": testId, multiple: multiple, ref: ref, type: INPUT_TYPE }));\n});\n/**\n * @internal @unstable\n *\n * @usage\n * ```tsx\n *  function MyUploadButton() {\n *    const [files, setFiles] = React.useState<File[]>([]);\n *    const [fileSelect, handleFileSelect] = useFileSelect(setFiles);\n *    return (\n *      <>\n *        {fileSelect}\n *        <Button\n *          onClick={() => {\n *            handleFileSelect('file');\n *          }}\n *        />\n *      </>\n *    );\n *  }\n * ```\n */\nconst useFileSelect = (onSelect) => {\n    const [inputProps, setInputProps] = React__default.useState(undefined);\n    const id = useStableId();\n    const ref = React__default.useRef(null);\n    React__default.useEffect(() => {\n        if (inputProps) {\n            ref.current?.click();\n        }\n    }, [id, inputProps]);\n    const handleFileSelect = React__default.useCallback((type, options) => {\n        if (id !== ref.current?.id)\n            return;\n        setInputProps({ type, ...options });\n    }, [id]);\n    const fileSelect = (React__default.createElement(FileSelect, { ...inputProps, id: id, onChange: (event) => {\n            if (isFunction(inputProps?.onChange))\n                inputProps?.onChange(event);\n            if (isFunction(onSelect) && !!event.target.files?.length) {\n                onSelect?.([...event.target.files]);\n            }\n            // Reset the input value to allow re-selecting the same file\n            if (ref.current) {\n                ref.current.value = '';\n            }\n            // clean up\n            setInputProps(undefined);\n        }, ref: ref }));\n    return [fileSelect, handleFileSelect];\n};\n\nexport { DEFAULT_PROPS, FileSelect, useFileSelect };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}