{"ast":null,"code":"import * as React from 'react';\nimport { classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\nimport { useFieldset } from '../Fieldset/useFieldset.mjs';\nimport { Flex } from '../Flex/Flex.mjs';\nimport { Loader } from '../Loader/Loader.mjs';\nimport { View } from '../View/View.mjs';\n\n// These variations support colorThemes. 'undefined' accounts for our\n// 'default' variation which is not named.\nconst supportedVariations = ['link', 'primary', undefined];\nconst ButtonPrimitive = (_ref, ref) => {\n  let {\n    className,\n    children,\n    colorTheme,\n    isFullWidth = false,\n    isDisabled,\n    isLoading,\n    loadingText = '',\n    size,\n    type = 'button',\n    variation,\n    ...rest\n  } = _ref;\n  // Creates our colorTheme modifier string based on if the variation\n  // supports colorThemes and a colorTheme is used.\n  const colorThemeModifier = supportedVariations.includes(variation) && colorTheme ? `${variation ?? 'outlined'}--${colorTheme}` : undefined;\n  const {\n    isFieldsetDisabled\n  } = useFieldset();\n  const shouldBeDisabled = isFieldsetDisabled ? isFieldsetDisabled : isDisabled ?? isLoading ?? rest['disabled'];\n  const componentClasses = classNames(ComponentClassName.Button, ComponentClassName.FieldGroupControl, classNameModifier(ComponentClassName.Button, variation), classNameModifier(ComponentClassName.Button, colorThemeModifier), classNameModifier(ComponentClassName.Button, size), classNameModifierByFlag(ComponentClassName.Button, 'disabled', shouldBeDisabled), classNameModifierByFlag(ComponentClassName.Button, 'loading', isLoading), classNameModifierByFlag(ComponentClassName.Button, 'fullwidth', isFullWidth), className);\n  return React.createElement(View, {\n    ref: ref,\n    as: \"button\",\n    className: componentClasses,\n    isDisabled: shouldBeDisabled,\n    type: type,\n    ...rest\n  }, isLoading ? React.createElement(Flex, {\n    as: \"span\",\n    className: ComponentClassName.ButtonLoaderWrapper\n  }, React.createElement(Loader, {\n    size: size\n  }), loadingText ? loadingText : null) : children);\n};\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/components/button)\n */\nconst Button = primitiveWithForwardRef(ButtonPrimitive);\nButton.displayName = 'Button';\nexport { Button };","map":{"version":3,"names":["React","classNames","ComponentClassName","classNameModifier","classNameModifierByFlag","primitiveWithForwardRef","useFieldset","Flex","Loader","View","supportedVariations","undefined","ButtonPrimitive","_ref","ref","className","children","colorTheme","isFullWidth","isDisabled","isLoading","loadingText","size","type","variation","rest","colorThemeModifier","includes","isFieldsetDisabled","shouldBeDisabled","componentClasses","Button","FieldGroupControl","createElement","as","ButtonLoaderWrapper","displayName"],"sources":["C:/Users/lvsct/Desktop/bitcoin-prediction/node_modules/@aws-amplify/ui-react/dist/esm/primitives/Button/Button.mjs"],"sourcesContent":["import * as React from 'react';\nimport { classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\nimport { useFieldset } from '../Fieldset/useFieldset.mjs';\nimport { Flex } from '../Flex/Flex.mjs';\nimport { Loader } from '../Loader/Loader.mjs';\nimport { View } from '../View/View.mjs';\n\n// These variations support colorThemes. 'undefined' accounts for our\n// 'default' variation which is not named.\nconst supportedVariations = ['link', 'primary', undefined];\nconst ButtonPrimitive = ({ className, children, colorTheme, isFullWidth = false, isDisabled, isLoading, loadingText = '', size, type = 'button', variation, ...rest }, ref) => {\n    // Creates our colorTheme modifier string based on if the variation\n    // supports colorThemes and a colorTheme is used.\n    const colorThemeModifier = supportedVariations.includes(variation) && colorTheme\n        ? `${variation ?? 'outlined'}--${colorTheme}`\n        : undefined;\n    const { isFieldsetDisabled } = useFieldset();\n    const shouldBeDisabled = isFieldsetDisabled\n        ? isFieldsetDisabled\n        : isDisabled ?? isLoading ?? rest['disabled'];\n    const componentClasses = classNames(ComponentClassName.Button, ComponentClassName.FieldGroupControl, classNameModifier(ComponentClassName.Button, variation), classNameModifier(ComponentClassName.Button, colorThemeModifier), classNameModifier(ComponentClassName.Button, size), classNameModifierByFlag(ComponentClassName.Button, 'disabled', shouldBeDisabled), classNameModifierByFlag(ComponentClassName.Button, 'loading', isLoading), classNameModifierByFlag(ComponentClassName.Button, 'fullwidth', isFullWidth), className);\n    return (React.createElement(View, { ref: ref, as: \"button\", className: componentClasses, isDisabled: shouldBeDisabled, type: type, ...rest }, isLoading ? (React.createElement(Flex, { as: \"span\", className: ComponentClassName.ButtonLoaderWrapper },\n        React.createElement(Loader, { size: size }),\n        loadingText ? loadingText : null)) : (children)));\n};\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/components/button)\n */\nconst Button = primitiveWithForwardRef(ButtonPrimitive);\nButton.displayName = 'Button';\n\nexport { Button };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,uBAAuB,QAAQ,iBAAiB;AAC5G,SAASC,uBAAuB,QAAQ,sCAAsC;AAC9E,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AACA;AACA,MAAMC,mBAAmB,GAAG,CAAC,MAAM,EAAE,SAAS,EAAEC,SAAS,CAAC;AAC1D,MAAMC,eAAe,GAAGA,CAAAC,IAAA,EAA+IC,GAAG,KAAK;EAAA,IAAtJ;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,UAAU;IAAEC,WAAW,GAAG,KAAK;IAAEC,UAAU;IAAEC,SAAS;IAAEC,WAAW,GAAG,EAAE;IAAEC,IAAI;IAAEC,IAAI,GAAG,QAAQ;IAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC,GAAAZ,IAAA;EACjK;EACA;EACA,MAAMa,kBAAkB,GAAGhB,mBAAmB,CAACiB,QAAQ,CAACH,SAAS,CAAC,IAAIP,UAAU,GAC1E,GAAGO,SAAS,IAAI,UAAU,KAAKP,UAAU,EAAE,GAC3CN,SAAS;EACf,MAAM;IAAEiB;EAAmB,CAAC,GAAGtB,WAAW,CAAC,CAAC;EAC5C,MAAMuB,gBAAgB,GAAGD,kBAAkB,GACrCA,kBAAkB,GAClBT,UAAU,IAAIC,SAAS,IAAIK,IAAI,CAAC,UAAU,CAAC;EACjD,MAAMK,gBAAgB,GAAG7B,UAAU,CAACC,kBAAkB,CAAC6B,MAAM,EAAE7B,kBAAkB,CAAC8B,iBAAiB,EAAE7B,iBAAiB,CAACD,kBAAkB,CAAC6B,MAAM,EAAEP,SAAS,CAAC,EAAErB,iBAAiB,CAACD,kBAAkB,CAAC6B,MAAM,EAAEL,kBAAkB,CAAC,EAAEvB,iBAAiB,CAACD,kBAAkB,CAAC6B,MAAM,EAAET,IAAI,CAAC,EAAElB,uBAAuB,CAACF,kBAAkB,CAAC6B,MAAM,EAAE,UAAU,EAAEF,gBAAgB,CAAC,EAAEzB,uBAAuB,CAACF,kBAAkB,CAAC6B,MAAM,EAAE,SAAS,EAAEX,SAAS,CAAC,EAAEhB,uBAAuB,CAACF,kBAAkB,CAAC6B,MAAM,EAAE,WAAW,EAAEb,WAAW,CAAC,EAAEH,SAAS,CAAC;EACxgB,OAAQf,KAAK,CAACiC,aAAa,CAACxB,IAAI,EAAE;IAAEK,GAAG,EAAEA,GAAG;IAAEoB,EAAE,EAAE,QAAQ;IAAEnB,SAAS,EAAEe,gBAAgB;IAAEX,UAAU,EAAEU,gBAAgB;IAAEN,IAAI,EAAEA,IAAI;IAAE,GAAGE;EAAK,CAAC,EAAEL,SAAS,GAAIpB,KAAK,CAACiC,aAAa,CAAC1B,IAAI,EAAE;IAAE2B,EAAE,EAAE,MAAM;IAAEnB,SAAS,EAAEb,kBAAkB,CAACiC;EAAoB,CAAC,EAClPnC,KAAK,CAACiC,aAAa,CAACzB,MAAM,EAAE;IAAEc,IAAI,EAAEA;EAAK,CAAC,CAAC,EAC3CD,WAAW,GAAGA,WAAW,GAAG,IAAI,CAAC,GAAKL,QAAS,CAAC;AACxD,CAAC;AACD;AACA;AACA;AACA,MAAMe,MAAM,GAAG1B,uBAAuB,CAACO,eAAe,CAAC;AACvDmB,MAAM,CAACK,WAAW,GAAG,QAAQ;AAE7B,SAASL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}